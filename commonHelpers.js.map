{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nlet currentPage = 1;\r\nlet currentQuery = '';\r\nlet isLoading = false;\r\nlet totalHits = 0;\r\nlet isSearchPerformed = false;\r\n\r\nlet gallery = new SimpleLightbox('.gallery a');\r\n\r\nconst endOfListMsg = document.querySelector('.end-message');\r\nendOfListMsg.classList.add('none');\r\ndocument\r\n  .getElementById('search-form')\r\n  .addEventListener('submit', async event => {\r\n    event.preventDefault();\r\n    const query = event.target.elements.searchQuery.value.trim();\r\n    if (!query) {\r\n      iziToast.warning({\r\n        message: 'Please fill in the search field to find images.',\r\n        position: 'topRight',\r\n      });\r\n\r\n      return;\r\n    }\r\n    currentQuery = query;\r\n    currentPage = 1;\r\n    const images = await fetchImages(currentQuery, currentPage);\r\n    isSearchPerformed = true;\r\n    totalHits = images.totalHits;\r\n    if (images.hits.length > 0) {\r\n      displayImages(images.hits, true);\r\n      iziToast.success({\r\n        message: `Hooray! We found ${totalHits} images.`,\r\n        position: 'topRight',\r\n      });\r\n    } else {\r\n      iziToast.error({\r\n        message:\r\n          'Sorry, there are no images matching your search query. Please try again.',\r\n        position: 'topRight',\r\n      });\r\n    }\r\n    event.target.elements.searchQuery.value = '';\r\n  });\r\n\r\nasync function fetchImages(query, page) {\r\n  isLoading = true;\r\n  const apiKey = '40924085-809e05b3e969373237b06a228';\r\n  const url = `https://pixabay.com/api/?key=${apiKey}&q=${encodeURIComponent(\r\n    query\r\n  )}&image_type=photo&orientation=horizontal&safesearch=true&per_page=40&page=${page}`;\r\n  try {\r\n    const response = await axios.get(url);\r\n    isLoading = false;\r\n    return response.data;\r\n  } catch (error) {\r\n    isLoading = false;\r\n    console.error('Error fetching images:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction displayImages(images, clear) {\r\n  const container = document.getElementById('images-container');\r\n  if (clear) {\r\n    container.innerHTML = '';\r\n    gallery = new SimpleLightbox('.gallery a', {\r\n      captionType: 'data',\r\n      captionDelay: 250,\r\n    });\r\n  }\r\n  container.innerHTML += images\r\n    .map(\r\n      image =>\r\n        `<div class=\"image-item\">\r\n        <a href=\"${image.largeImageURL}\"><img class=\"card\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" data-title=\"${image.tags}\"/></a>\r\n      \r\n      <div class=\"text-container\">\r\n      <p class=\"text\">\r\n        <span class=\"text-decoration\">Likes</span>\r\n        <span class=\"text-decor\">${image.likes}</span>\r\n      </p>\r\n      <p class=\"text\">\r\n        <span class=\"text-decoration\">Views</span>\r\n        <span class=\"text-decor\">${image.views}</span>\r\n      </p>\r\n      <p class=\"text\">\r\n        <span class=\"text-decoration\">Comments</span>\r\n        <span class=\"text-decor\">${image.comments}</span>\r\n      </p>\r\n      <p class=\"text\">\r\n        <span class=\"text-decoration\">Downloads</span>\r\n        <span class=\"text-decor\">${image.downloads}</span>\r\n      </p>\r\n    </div>\r\n    \r\n    </div>`\r\n    )\r\n    .join('');\r\n  gallery.refresh();\r\n}\r\n\r\n// ---------skroll\r\n\r\nconst observer = new IntersectionObserver(\r\n  (entries, observer) => {\r\n    if (entries[0].isIntersecting && !isLoading) {\r\n      if (totalHits > currentPage * 40) {\r\n        currentPage++;\r\n        fetchImages(currentQuery, currentPage).then(data => {\r\n          displayImages(data.hits, false);\r\n        });\r\n      } else if (\r\n        totalHits <= currentPage * 40 &&\r\n        totalHits > 0 &&\r\n        isSearchPerformed\r\n      ) {\r\n        endOfListMsg.classList.remove('none');\r\n      }\r\n    }\r\n  },\r\n  { rootMargin: '200px' }\r\n);\r\n\r\nobserver.observe(document.querySelector('.loading-observer'));\r\n"],"names":["currentPage","currentQuery","isLoading","totalHits","isSearchPerformed","gallery","SimpleLightbox","endOfListMsg","event","query","iziToast","images","fetchImages","displayImages","page","url","response","axios","error","clear","container","image","observer","entries","data"],"mappings":"owBAMA,IAAIA,EAAc,EACdC,EAAe,GACfC,EAAY,GACZC,EAAY,EACZC,EAAoB,GAEpBC,EAAU,IAAIC,EAAe,YAAY,EAE7C,MAAMC,EAAe,SAAS,cAAc,cAAc,EAC1DA,EAAa,UAAU,IAAI,MAAM,EACjC,SACG,eAAe,aAAa,EAC5B,iBAAiB,SAAU,MAAMC,GAAS,CACzCA,EAAM,eAAc,EACpB,MAAMC,EAAQD,EAAM,OAAO,SAAS,YAAY,MAAM,OACtD,GAAI,CAACC,EAAO,CACVC,EAAS,QAAQ,CACf,QAAS,kDACT,SAAU,UAClB,CAAO,EAED,MACD,CACDT,EAAeQ,EACfT,EAAc,EACd,MAAMW,EAAS,MAAMC,EAAYX,EAAcD,CAAW,EAC1DI,EAAoB,GACpBD,EAAYQ,EAAO,UACfA,EAAO,KAAK,OAAS,GACvBE,EAAcF,EAAO,KAAM,EAAI,EAC/BD,EAAS,QAAQ,CACf,QAAS,oBAAoBP,YAC7B,SAAU,UAClB,CAAO,GAEDO,EAAS,MAAM,CACb,QACE,2EACF,SAAU,UAClB,CAAO,EAEHF,EAAM,OAAO,SAAS,YAAY,MAAQ,EAC9C,CAAG,EAEH,eAAeI,EAAYH,EAAOK,EAAM,CACtCZ,EAAY,GAEZ,MAAMa,EAAM,qEAA4C,mBACtDN,CACJ,8EAAgFK,IAC9E,GAAI,CACF,MAAME,EAAW,MAAMC,EAAM,IAAIF,CAAG,EACpC,OAAAb,EAAY,GACLc,EAAS,IACjB,OAAQE,EAAP,CACA,MAAAhB,EAAY,GACZ,QAAQ,MAAM,yBAA0BgB,CAAK,EACvCA,CACP,CACH,CAEA,SAASL,EAAcF,EAAQQ,EAAO,CACpC,MAAMC,EAAY,SAAS,eAAe,kBAAkB,EACxDD,IACFC,EAAU,UAAY,GACtBf,EAAU,IAAIC,EAAe,aAAc,CACzC,YAAa,OACb,aAAc,GACpB,CAAK,GAEHc,EAAU,WAAaT,EACpB,IACCU,GACE;AAAA,mBACWA,EAAM,yCAAyCA,EAAM,sBAAsBA,EAAM,qBAAqBA,EAAM;AAAA;AAAA;AAAA;AAAA;AAAA,mCAK5FA,EAAM;AAAA;AAAA;AAAA;AAAA,mCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,mCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,mCAINA,EAAM;AAAA;AAAA;AAAA;AAAA,WAKpC,EACA,KAAK,EAAE,EACVhB,EAAQ,QAAO,CACjB,CAIA,MAAMiB,EAAW,IAAI,qBACnB,CAACC,EAASD,IAAa,CACjBC,EAAQ,GAAG,gBAAkB,CAACrB,IAC5BC,EAAYH,EAAc,IAC5BA,IACAY,EAAYX,EAAcD,CAAW,EAAE,KAAKwB,GAAQ,CAClDX,EAAcW,EAAK,KAAM,EAAK,CACxC,CAAS,GAEDrB,GAAaH,EAAc,IAC3BG,EAAY,GACZC,GAEAG,EAAa,UAAU,OAAO,MAAM,EAGzC,EACD,CAAE,WAAY,OAAS,CACzB,EAEAe,EAAS,QAAQ,SAAS,cAAc,mBAAmB,CAAC"}